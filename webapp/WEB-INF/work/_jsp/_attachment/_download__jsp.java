/*
 * JSP generated by Resin-3.1.12 (built Mon, 29 Aug 2011 03:22:08 PDT)
 */

package _jsp._attachment;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.HashMap;
import java.util.Map;
import com.sogou.qadev.service.cynthia.util.ItemBaseUtil;
import java.net.*;
import com.sogou.qadev.service.cynthia.bean.Attachment;
import com.sogou.qadev.service.cynthia.bean.Key;
import com.sogou.qadev.service.cynthia.factory.DataAccessFactory;
import com.sogou.qadev.service.cynthia.service.DataAccessSession;
import com.sogou.qadev.service.cynthia.bean.UUID;
import com.sogou.qadev.service.cynthia.util.ConfigUtil;

public class _download__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    response.setCharacterEncoding("GBK");
    request.setCharacterEncoding("GBK");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      response.setDateHeader("Expires", 0); //Causes the proxy cache to see the page as "stale"
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
	//parse request
String	method	= request.getParameter("method");

String idStr = request.getParameter("id");
UUID id = DataAccessFactory.getInstance().createUUID(idStr);

DataAccessSession das = null;
if(session == null || session.getAttribute("kid") == null || session.getAttribute("key") == null)
{
	 das = DataAccessFactory.getInstance().getSysDas();
}
else
{
	long keyId = (Long)session.getAttribute("kid");
	Key key = (Key)session.getAttribute("key");
	das = DataAccessFactory.getInstance().createDataAccessSession(key.getUsername(), keyId);
}

Attachment attachment = das.queryAttachment(id, true);
if ( attachment == null )
{
	response.setContentType("text/html; charset=utf-8");

      out.write(_jsp_string2, 0, _jsp_string2.length);
      
	return;
}

if ( "info".equalsIgnoreCase(method) )
{
	response.setContentType("application/xml; charset=utf-8");
	
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((attachment.getId() ));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((ItemBaseUtil.toSafeSQLString(attachment.getName()) ));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((ItemBaseUtil.toSafeSQLString(attachment.getCreateUser()) ));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((ItemBaseUtil.toSafeSQLString(attachment.getCreateTime()) ));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((attachment.getSize() ));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      
	return;
}
else if ( "download".equalsIgnoreCase(method) )
{
	
	response.addHeader("Content-Disposition","attachment;filename="+ new String( attachment.getName().getBytes("gb2312"), "ISO8859-1" ) );
	response.setContentType("application/x-attachment");

	String fileName = attachment.getName();
	String mimeType = fileName.substring(fileName.lastIndexOf(".")+1);
	
	Map<String,String> mimeMap = new HashMap<String,String>();
	mimeMap.put("jpeg", "image/jpeg");
	mimeMap.put("jpg", "image/jpeg");
	mimeMap.put("jfif", "image/jpeg");
	mimeMap.put("jfif-tbnl", "image/jpeg");
	mimeMap.put("jpe", "image/jpeg");
	mimeMap.put("jfif", "image/jpeg");
	mimeMap.put("tiff", "image/tiff");
	mimeMap.put("tif", "image/tiff");
	mimeMap.put("gif", "image/gif");
	mimeMap.put("xls", "application/x-msexcel");
	mimeMap.put("doc", "application/msword");
	mimeMap.put("ppt", "application/x-mspowerpoint");
	mimeMap.put("zip", "application/x-zip-compressed");
	mimeMap.put("pdf", "application/pdf");
	mimeMap.put("apk", "application/vnd.android.package-archive");
	
	String type = mimeMap.get(mimeType.toLowerCase());
	response.setContentType( type != null ? type : "application/x-attachment");
	
	try
	{
		out.clear();
		response.getOutputStream().write(attachment.getData());
	}catch(Exception e)
	{
		e.printStackTrace();
	}
}

    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 7170261747151080670L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("attachment/download.jsp"), 792683689620152873L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string2;
  private final static char []_jsp_string7;
  private final static char []_jsp_string5;
  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  private final static char []_jsp_string3;
  private final static char []_jsp_string6;
  private final static char []_jsp_string8;
  private final static char []_jsp_string4;
  static {
    _jsp_string2 = "\n	ERROR:<br/>\n	Sorry, can't get attachment file info<br/>\n	Meybe you didn't pass the passport of qadev.rd.sogou or can't find attachment.\n	".toCharArray();
    _jsp_string7 = " fileSize='".toCharArray();
    _jsp_string5 = " createUser=".toCharArray();
    _jsp_string1 = "\n\n\n\n\n\n\n\n\n\n".toCharArray();
    _jsp_string0 = "\n\n\n".toCharArray();
    _jsp_string3 = "\n<?xml version='1.0' encoding='UTF-8'?>\n<attachment id='".toCharArray();
    _jsp_string6 = " createTime=".toCharArray();
    _jsp_string8 = "' />\n	".toCharArray();
    _jsp_string4 = "' name=".toCharArray();
  }
}
